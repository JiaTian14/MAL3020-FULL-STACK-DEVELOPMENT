name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-22.04
    
    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval \"db.runCommand({ ping: 1 })\" --quiet"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      matrix:
        node-version: [16, 18]
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
      
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
        
    - name: Verify MongoDB connection
      run: |
        echo "Waiting for MongoDB to accept connections..."
        timeout 30s bash -c 'until nc -z localhost 27017; do sleep 1; done'
        echo "MongoDB is up and running!"
      
    - name: Run tests
      env:
        MONGODB_URI: mongodb://localhost:27017/testDatabase
        NODE_ENV: test
        CI: true
      run: |
        mkdir -p coverage
        npm test -- --coverage --coverageDirectory=./coverage --json --outputFile=./coverage/jest-results.json

    - name: Upload test coverage
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: coverage-node-${{ matrix.node-version }}
        path: coverage
        if-no-files-found: warn
