name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-22.04
    
    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
        options: >-
          --health-cmd mongosh --eval "db.runCommand({ ping: 1 })"
          --health-interval 10s
          --health-timeout 30s
          --health-retries 5

    strategy:
      matrix:
        node-version: [16, 18]  # Removing Node 14 as it's EOL
      fail-fast: false  # Continue with other versions if one fails

    steps:
    - uses: actions/checkout@v3
      
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install MongoDB tools
      run: |
        sudo apt-get update
        sudo apt-get install -y mongodb-mongosh
        
    - name: Install dependencies
      run: |
        npm ci
        
    - name: Wait for MongoDB
      run: |
        timeout 30s bash -c 'until mongosh --eval "db.runCommand({ ping: 1 })" --quiet; do sleep 2; done'
      
    - name: Run tests
      env:
        MONGODB_URI: mongodb://localhost:27017/testDatabase
        NODE_ENV: test
        CI: true
      run: |
        npm test -- --verbose --forceExit
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-node-${{ matrix.node-version }}
        path: |
          coverage/
          junit.xml
        retention-days: 7
