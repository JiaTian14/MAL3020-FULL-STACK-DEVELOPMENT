name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-22.04
    
    services:
      mongodb:
        image: mongo:4.4
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: root
        ports:
          - 27017:27017
        options: >-
          --health-cmd="echo 'db.runCommand(\"ping\").ok' | mongosh localhost:27017/test --quiet"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
          --health-start-period=30s

    strategy:
      matrix:
        node-version: [16, 18]
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
      
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        
    - name: Verify MongoDB Connection
      run: |
        echo "Waiting for MongoDB to be ready..."
        for i in {1..30}; do
          if echo "db.runCommand('ping').ok" | mongosh --quiet; then
            echo "MongoDB is ready!"
            break
          fi
          echo "Attempt $i: MongoDB not ready yet..."
          sleep 2
        done
      
    - name: Run tests
      env:
        MONGODB_URI: mongodb://root:root@localhost:27017/testDatabase?authSource=admin
        NODE_ENV: test
        CI: true
      run: |
        npm test
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-node-${{ matrix.node-version }}
        path: coverage
        if-no-files-found: warn
